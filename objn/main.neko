@@SEL = $new(null)
@@SEL.@names = null
@@SEL.@args = null
@@SEL.@new = function(names, args) {
		if $typeof(names) == $tarray && $typeof(args) == $tarray {
		var _ = $new(this)
		_.@names = names
		_.@args = args
		
		return _
	}
}
@@SEL.@toMessage = function() {
	if $asize(this.@args) == 0
		return null
	else {
		var _ = $new(null)
		
		var i = 0
		while i < $asize(this.@names) {
			$objset(_, $hash(this.@names[i]), this.@args[i])
			
			i += 1
		}
		
		return _
	}
}
@@SEL.@fromString = function(str, args) {
	// todo
}
@@SEL.@toString = function() {
	if $asize(this.@names) == 1 && $asize(this.@args) == 0 {
		return this.@names[0]
	} else {
		var name = ""
						
		var i = 0
		while i < $asize(this.@names) {
			name += this.@names[i] + "@"
			
			i += 1
		}
		
		return name
	}
}
@@SEL.__string = function() {
	if $asize(this.@names) == 1 && $asize(this.@args) == 0 {
		return this.@names[0]
	} else {
		var name = ""
						
		var i = 0
		while i < $asize(this.@names) {
			name += this.@names[i] + ":"
			
			i += 1
		}
		
		return name
	}
}

@SEL = function(_1, _2) {return @@SEL.@new(_1, _2)}

{var pow = $loader.loadprim("std@math_pow", 2)
	@POW = function(lhs, rhs) {
		if ($typeof(lhs)==$tint || $typeof(lhs)==$tfloat) && ($typeof(rhs)==$tint || $typeof(rhs)==$float)
			return pow(lhs, rhs)
		else if $typeof(lhs)==$tobject
			return lhs.__pow(rhs)
		else if $typeof(rhs)==$tobject
			return rhs.__rpow(lhs)
		else
			$throw("`"+lhs+"` ** `"+rhs+"` doesn't look right")
	}
}

@BITAND = function(lhs, rhs)
	if $typeof(lhs)==$tint && $typeof(rhs)==$tint
		return lhs & rhs
	else if $typeof(lhs)==$tobject
		return lhs.__bitand(rhs)
	else if $typeof(rhs)==$tobject
		return rhs.__rbitand(lhs)
	else
		$throw("`"+lhs+"` & `"+rhs+"` doesn't look right")

@BITOR = function(lhs, rhs)
	if $typeof(lhs)==$tint && $typeof(rhs)==$tint
		return lhs | rhs
	else if $typeof(lhs)==$tobject
		return lhs.__bitor(rhs)
	else if $typeof(rhs)==$tobject
		return rhs.__rbitor(lhs)
	else
		$throw("`"+lhs+"` | `"+rhs+"` doesn't look right")

@BITXOR = function(lhs, rhs)
	if $typeof(lhs)==$tint && $typeof(rhs)==$tint
		return lhs ^ rhs
	else if $typeof(lhs)==$tobject
		return lhs.__bitxor(rhs)
	else if $typeof(rhs)==$tobject
		return rhs.__rbitxor(lhs)
	else
		$throw("`"+lhs+"` ^ `"+rhs+"` doesn't look right")

@SHL = function(lhs, rhs)
	if $typeof(lhs)==$tint && $typeof(rhs)==$tint
		return lhs << rhs
	else if $typeof(lhs)==$tobject
		return lhs.__shl(rhs)
	else if $typeof(rhs)==$tobject
		return rhs.__rshl(lhs)
	else
		$throw("`"+lhs+"` << `"+rhs+"` doesn't look right")

@SHR = function(lhs, rhs)
	if $typeof(lhs)==$tint && $typeof(rhs)==$tint
		return lhs >> rhs
	else if $typeof(lhs)==$tobject
		return lhs.__shr(rhs)
	else if $typeof(rhs)==$tobject
		return rhs.__rshr(lhs)
	else
		$throw("`"+lhs+"` >> `"+rhs+"` doesn't look right")

@NOT = function(v)
	if $typeof(v) == $tobject
		return v.__not()
	else
		return $not(v)

@BITNOT = function(v)
	if $typeof(v) == $tobject
		return v.__bitnot()
	else if $typeof(v) == $tint
		return v ^ -1
	else
		$throw("~`"+v+"` doesn't look right")

@BOOL = function(v)
	if $typeof(v) == $tobject
		return v.__bool()
	else
		return $istrue(v)

@POS = function(v)
	if $typeof(v) == $tobject
		return v.__pos()
	else if $typeof(v) == $tint || $typeof(v) == $tfloat
		return v
	else
		$throw("+`"+v+"` doesn't look right")

@NEG = function(v)
	if $typeof(v) == $tobject
		return v.__neg()
	else if $typeof(v) == $tint || $typeof(v) == $tfloat
		return -v
	else
		$throw("-`"+v+"` doesn't look right")

@class = $new(null)
	@class.new = function(name, inherit) {
		if inherit == null {
			var _ = $new(this)
			$objremove(_, $hash("new"))
			
			_.@name    = name
			_.@inst    = false
			_.@super   = null
			
			_.@class_attrs    = $new(null)
			_.@instance_attrs = $new(null)
			_.@class_vars     = $new(null)
			_.@instance_vars  = $new(null)
			
			return _
		} else {
			var _ = $new(this)
			$objremove(_, $hash("new"))
			
			_.@name    = name
			_.@inst    = false
			_.@super   = inherit
			
			_.@class_attrs    = $new(null)
			_.@instance_attrs = $new(null)
			_.@class_vars     = $new(null)
			_.@instance_vars  = $new(null)
		
			var d = $objfields(inherit.@class_attrs)
			var j = 0
			while j < $asize(d) {
				$objset(_.@class_attrs, d[j], $objget(inherit.@class_attrs, d[j]))
				
				j += 1
			}
			
			d = $objfields(inherit.@instance_attrs)
			j = 0
			while j < $asize(d) {
				$objset(_.@instance_attrs, d[j], $objget(inherit.@instance_attrs, d[j]))
				
				j += 1
			}
			
			d = $objfields(inherit.@class_vars)
			j = 0
			while j < $asize(d) {
				$objset(_.@class_vars, d[j], $objget(inherit.@class_vars, d[j]))
				
				j += 1
			}
			
			d = $objfields(inherit.@instance_vars)
			j = 0
			while j < $asize(d) {
				$objset(_.@instance_vars, d[j], $objget(inherit.@instance_vars, d[j]))
				
				j += 1
			}
			
			return _
		}
	}
	
	@class.@@add_class_method = function(args) {
		$objset(this.@class_attrs, $hash(args.@toString()), null)
	}
	
	@class.@@add_instance_method = function(args) {
		$objset(this.@instance_attrs, $hash(args.@toString()), null)
	}
	
	@class.@@add_var = function(name, attrs, defval) {
		if $istrue(attrs) {
			if attrs.class {
				defval = if(defval == null) null else defval()
				$objset(this.@class_vars, $hash(name), defval)
				
				if attrs.read {
					$objset(this.@class_attrs, $hash(name), function() {
						return $objget(this.@class_vars, $hash(name))
					})
				}
				
				if attrs.write {
					this.@@class_method(@SEL($array(name), $array(null)), function(args) {
						var value = $objget(args, $hash(name))
						
						$objset(this.@class_vars, $hash(name), value)
					})
				}
			} else {
				$objset(this.@instance_vars, $hash(name), defval)
				
				if attrs.read {
					$objset(this.@instance_attrs, $hash(name), function() {
						return $objget(this.@instance_vars, $hash(name))
					})
				}
				
				if attrs.write {
					$objset(this.@instance_attrs, $hash(name+"@"), function(args) {
						var value = $objget(args, $hash(name))
						
						$objset(this.@instance_vars, $hash(name), value)
					})
				}
			}
		} else {
			$objset(this.@instance_vars, $hash(name), defval)
		}
	}
	
	@class.@@implementation = function() {
		if this.@super == null
			return null
		
		var d = $objfields(this.@super.@class_attrs)
		var j = 0
		while j < $asize(d) {
			$objset(this.@class_attrs, d[j], $objget(this.@super.@class_attrs, d[j]))
			
			j += 1
		}
		
		d = $objfields(this.@super.@instance_attrs)
		j = 0
		while j < $asize(d) {
			$objset(this.@instance_attrs, d[j], $objget(this.@super.@instance_attrs, d[j]))
			
			j += 1
		}
	}
	
	@class.@@class_method = function(args, body) {
		$objset(this.@class_attrs, $hash(args.@toString()), body)
	}
	
	@class.@@instance_method = function(args, body) {
		$objset(this.@instance_attrs, $hash(args.@toString()), body)
	}
	
	@class.@@get_vars = function() {
		if this.@inst {
			return this.@instance_vars
		} else {
			return this.@class_vars
		}
	}
	
	@class.@@send = function(args) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash(args.@toString())) {
				/*$nargs($objget(this.@instance_attrs, $hash(args.@toString()))) == 0*/
				if $sfind(args.@toString(), 0, "@") == null
					$call($objget(this.@instance_attrs, $hash(args.@toString())), this, $array())
				else
					$call($objget(this.@instance_attrs, $hash(args.@toString())), this, $array(args.@toMessage()))
			} else
				$call(this.@instance_attrs.doesNotRecognizeSelector@, this, $array({doesNotRecognizeSelector=>args}))
		} else {
			if $objfield(this.@class_attrs, $hash(args.@toString())) {
				/*$nargs($objget(this.@class_attrs, $hash(args.@toString()))) == 0*/
				if $sfind(args.@toString(), 0, "@") == null
					$call($objget(this.@class_attrs, $hash(args.@toString())), this, $array())
				else
					$call($objget(this.@class_attrs, $hash(args.@toString())), this, $array(args.@toMessage()))
			} else
				$call(this.@class_attrs.doesNotRecognizeSelector@, this, $array({doesNotRecognizeSelector=>args}))
		}
	}
	
	// metamethods
	@class.__add = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__add@"))
				this.@@send(@SEL($array("__add"), $array(rhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__add@"))
				this.@@send(@SEL($array("__add"), $array(rhs)))
			else
				$throw("error")
		}
	}
	@class.__radd = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__radd@"))
				this.@@send(@SEL($array("__radd"), $array(lhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__radd@"))
				this.@@send(@SEL($array("__radd"), $array(lhs)))
			else
				$throw("error")
		}
	}
	
	@class.__sub = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__sub@"))
				this.@@send(@SEL($array("__sub"), $array(rhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__sub@"))
				this.@@send(@SEL($array("__sub"), $array(rhs)))
			else
				$throw("error")
		}
	}
	@class.__rsub = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rsub@"))
				this.@@send(@SEL($array("__rsub"), $array(lhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rsub@"))
				this.@@send(@SEL($array("__rsub"), $array(lhs)))
			else
				$throw("error")
		}
	}
	
	@class.__mult = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__mult@"))
				this.@@send(@SEL($array("__mult"), $array(rhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__mult@"))
				this.@@send(@SEL($array("__mult"), $array(rhs)))
			else
				$throw("error")
		}
	}
	@class.__rmult = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rmult@"))
				this.@@send(@SEL($array("__rmult"), $array(lhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rmult@"))
				this.@@send(@SEL($array("__rmult"), $array(lhs)))
			else
				$throw("error")
		}
	}
	
	@class.__div = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__div@"))
				this.@@send(@SEL($array("__div"), $array(rhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__div@"))
				this.@@send(@SEL($array("__div"), $array(rhs)))
			else
				$throw("error")
		}
	}
	@class.__rdiv = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rdiv@"))
				this.@@send(@SEL($array("__rdiv"), $array(lhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rdiv@"))
				this.@@send(@SEL($array("__rdiv"), $array(lhs)))
			else
				$throw("error")
		}
	}
	
	@class.__mod = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__mod@"))
				this.@@send(@SEL($array("__mod"), $array(rhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__mod@"))
				this.@@send(@SEL($array("__mod"), $array(rhs)))
			else
				$throw("error")
		}
	}
	@class.__rmod = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rmod@"))
				this.@@send(@SEL($array("__rmod"), $array(lhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rmod@"))
				this.@@send(@SEL($array("__rmod"), $array(lhs)))
			else
				$throw("error")
		}
	}
	
	@class.__pow = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__pow@"))
				this.@@send(@SEL($array("__pow"), $array(rhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__pow@"))
				this.@@send(@SEL($array("__pow"), $array(rhs)))
			else
				$throw("error")
		}
	}
	@class.__rpow = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rpow@"))
				this.@@send(@SEL($array("__rpow"), $array(lhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rpow@"))
				this.@@send(@SEL($array("__rpow"), $array(lhs)))
			else
				$throw("error")
		}
	}
	
	@class.__bitand = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__bitand@"))
				this.@@send(@SEL($array("__bitand"), $array(rhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__bitand@"))
				this.@@send(@SEL($array("__bitand"), $array(rhs)))
			else
				$throw("error")
		}
	}
	@class.__rbitand = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rbitand@"))
				this.@@send(@SEL($array("__rbitand"), $array(lhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rbitand@"))
				this.@@send(@SEL($array("__rbitand"), $array(lhs)))
			else
				$throw("error")
		}
	}
	
	@class.__bitor = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__bitor@"))
				this.@@send(@SEL($array("__bitor"), $array(rhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__bitor@"))
				this.@@send(@SEL($array("__bitor"), $array(rhs)))
			else
				$throw("error")
		}
	}
	@class.__rbitor = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rbitor@"))
				this.@@send(@SEL($array("__rbitor"), $array(lhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rbitor@"))
				this.@@send(@SEL($array("__rbitor"), $array(lhs)))
			else
				$throw("error")
		}
	}
	
	@class.__bitxor = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__bitxor@"))
				this.@@send(@SEL($array("__bitxor"), $array(rhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__bitxor@"))
				this.@@send(@SEL($array("__bitxor"), $array(rhs)))
			else
				$throw("error")
		}
	}
	@class.__rbitxor = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rbitaxor@"))
				this.@@send(@SEL($array("__rbitxor"), $array(lhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rbitxor@"))
				this.@@send(@SEL($array("__rbitxor"), $array(lhs)))
			else
				$throw("error")
		}
	}
	
	@class.__shl = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__shl@"))
				this.@@send(@SEL($array("__shl"), $array(rhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__shl@"))
				this.@@send(@SEL($array("__shl"), $array(rhs)))
			else
				$throw("error")
		}
	}
	@class.__rshl = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rshl@"))
				this.@@send(@SEL($array("__rshl"), $array(lhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rshl@"))
				this.@@send(@SEL($array("__rshl"), $array(lhs)))
			else
				$throw("error")
		}
	}
	
	@class.__shr = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__shr@"))
				this.@@send(@SEL($array("__shr"), $array(rhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__shr@"))
				this.@@send(@SEL($array("__shr"), $array(rhs)))
			else
				$throw("error")
		}
	}
	@class.__rshr = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rshr@"))
				this.@@send(@SEL($array("__rshr"), $array(lhs)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rshr@"))
				this.@@send(@SEL($array("__rshr"), $array(lhs)))
			else
				$throw("error")
		}
	}
	
	/*@class.__compare = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__compare@"))
				this.@@send(@SEL($array("__compare"), $array(rhs)))
			else
				return $pcompare(this, rhs)
		} else {
			if $objfield(this.@class_attrs, $hash("__compare@"))
				this.@@send(@SEL($array("__compare"), $array(rhs)))
			else
				return $pcompare(this, rhs)
		}
	}*/
	
	@class.__bool = function() {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__bool"))
				this.@@send(@SEL($array("__bool"), $array()))
			else
				true
		} else {
			if $objfield(this.@class_attrs, $hash("__bool"))
				this.@@send(@SEL($array("__bool"), $array()))
			else
				true
		}
	}
	
	@class.__not = function() {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__not"))
				this.@@send(@SEL($array("__not"), $array()))
			else
				$not(this.__bool())
		} else {
			if $objfield(this.@class_attrs, $hash("__not"))
				this.@@send(@SEL($array("__not"), $array()))
			else
				$not(this.__bool())
		}
	}
	
	@class.__bitnot = function() {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__bitnot"))
				this.@@send(@SEL($array("__bitnot"), $array()))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__bitnot"))
				this.@@send(@SEL($array("__bitnot"), $array()))
			else
				$throw("error")
		}
	}
	
	@class.__pos = function() {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__pos"))
				this.@@send(@SEL($array("__pos"), $array()))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__pos"))
				this.@@send(@SEL($array("__pos"), $array()))
			else
				$throw("error")
		}
	}
	@class.__neg = function() {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__neg"))
				this.@@send(@SEL($array("__neg"), $array()))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__neg"))
				this.@@send(@SEL($array("__neg"), $array()))
			else
				$throw("error")
		}
	}
	
	@class.__get = function(index) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__get@"))
				this.@@send(@SEL($array("__get"), $array(index)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__get@"))
				this.@@send(@SEL($array("__get"), $array(index)))
			else
				$throw("error")
		}
	}
	@class.__set = function(index, value) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__get@__set@"))
				this.@@send(@SEL($array("__get", "__set"), $array(index, value)))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__get@__set@"))
				this.@@send(@SEL($array("__get", "__set"), $array(index, value)))
			else
				$throw("error")
		}
	}
	
	@class.__string = function() {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__string"))
				this.@@send(@SEL($array("__string"), $array()))
			else
				this.@name+this.@instance_vars
		} else {
			if $objfield(this.@class_attrs, $hash("__string"))
				this.@@send(@SEL($array("__string"), $array()))
			else
				this.@name+this.@class_vars
		}
	}