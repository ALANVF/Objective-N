@@SEL = $new(null)
@@SEL.@arity = null
@@SEL.@names = null
@@SEL.@new = function(arity, names) {
	if $typeof(names) == $tstring {
		names = $array(names)
	}
	
	if $typeof(arity) == $tint && $typeof(names) == $tarray {
		var _ = $new(this)
		_.@arity = arity
		_.@names = names
		
		return _
	} else {
		$throw("Invalid selector: `"+arity+"`, `"+names+"`")
	}
}
@@SEL.@fromString = function(str) {
	// todo
	$throw("todo!")
}
@@SEL.@toString = function() {
	return if this.@arity == 0 {
		this.@names[0]
	} else {
		var name = ""
		var i = 0
		
		while i < this.@arity {
			name += this.@names[i] + "@"
			i += 1
		}
		
		name
	}
}
@@SEL.__string = function() {
	return if this.@arity == 0 {
		this.@names[0]
	} else {
		var name = ""
		var i = 0
		
		while i < this.@arity {
			name += this.@names[i] + ":"
			i += 1
		}
		
		name
	}
}

@SEL = function(_1, _2) @@SEL.@new(_1, _2)

var std@math_pow = $loader.loadprim("std@math_pow", 2)
@POW = function(lhs, rhs)
	if ($typeof(lhs)==$tint || $typeof(lhs)==$tfloat) && ($typeof(rhs)==$tint || $typeof(rhs)==$tfloat)
		std@math_pow(lhs, rhs)
	else if $typeof(lhs)==$tobject
		lhs.__pow(rhs)
	else if $typeof(rhs)==$tobject
		rhs.__rpow(lhs)
	else
		$throw("`"+lhs+"` ** `"+rhs+"` doesn't look right")

@BITAND = function(lhs, rhs)
	if $typeof(lhs)==$tint && $typeof(rhs)==$tint
		lhs & rhs
	else if $typeof(lhs)==$tobject
		lhs.__bitand(rhs)
	else if $typeof(rhs)==$tobject
		rhs.__rbitand(lhs)
	else
		$throw("`"+lhs+"` & `"+rhs+"` doesn't look right")

@BITOR = function(lhs, rhs)
	if $typeof(lhs)==$tint && $typeof(rhs)==$tint
		lhs | rhs
	else if $typeof(lhs)==$tobject
		lhs.__bitor(rhs)
	else if $typeof(rhs)==$tobject
		rhs.__rbitor(lhs)
	else
		$throw("`"+lhs+"` | `"+rhs+"` doesn't look right")

@BITXOR = function(lhs, rhs)
	if $typeof(lhs)==$tint && $typeof(rhs)==$tint
		lhs ^ rhs
	else if $typeof(lhs)==$tobject
		lhs.__bitxor(rhs)
	else if $typeof(rhs)==$tobject
		rhs.__rbitxor(lhs)
	else
		$throw("`"+lhs+"` ^ `"+rhs+"` doesn't look right")

@SHL = function(lhs, rhs)
	if $typeof(lhs)==$tint && $typeof(rhs)==$tint
		lhs << rhs
	else if $typeof(lhs)==$tobject
		lhs.__shl(rhs)
	else if $typeof(rhs)==$tobject
		rhs.__rshl(lhs)
	else
		$throw("`"+lhs+"` << `"+rhs+"` doesn't look right")

@SHR = function(lhs, rhs)
	if $typeof(lhs)==$tint && $typeof(rhs)==$tint
		lhs >> rhs
	else if $typeof(lhs)==$tobject
		lhs.__shr(rhs)
	else if $typeof(rhs)==$tobject
		rhs.__rshr(lhs)
	else
		$throw("`"+lhs+"` >> `"+rhs+"` doesn't look right")

@NOT = function(v)
	if $typeof(v) == $tobject
		v.__not()
	else
		$not(v)

@BITNOT = function(v)
	if $typeof(v) == $tobject
		v.__bitnot()
	else if $typeof(v) == $tint
		v ^ -1
	else
		$throw("~`"+v+"` doesn't look right")

@BOOL = function(v)
	if $typeof(v) == $tobject
		v.__bool()
	else
		$istrue(v)

@POS = function(v)
	if $typeof(v) == $tobject
		v.__pos()
	else if $typeof(v) == $tint || $typeof(v) == $tfloat
		v
	else
		$throw("+`"+v+"` doesn't look right")

@NEG = function(v)
	if $typeof(v) == $tobject
		v.__neg()
	else if $typeof(v) == $tint || $typeof(v) == $tfloat {
		-v
	} else
		$throw("-`"+v+"` doesn't look right")

// TODO: this should probably use object prototypes
@class = $new(null)
	@class.new = function(name, inherit) {
		var _ = $new(this)
		$objremove(_, $hash("new"))
		
		_.@name  = name
		_.@inst  = false
		_.@super = null
		
		_.@class_attrs    = $new(null)
		_.@instance_attrs = $new(null)
		_.@class_vars     = $new(null)
		_.@instance_vars  = $new(null)
		
		if inherit != null {
			_.@super = inherit
		
			var d = $objfields(inherit.@class_attrs)
			var j = 0
			while j < $asize(d) {
				$objset(_.@class_attrs, d[j], $objget(inherit.@class_attrs, d[j]))
				j += 1
			}
			
			d = $objfields(inherit.@instance_attrs)
			j = 0
			while j < $asize(d) {
				$objset(_.@instance_attrs, d[j], $objget(inherit.@instance_attrs, d[j]))
				j += 1
			}
			
			d = $objfields(inherit.@class_vars)
			j = 0
			while j < $asize(d) {
				$objset(_.@class_vars, d[j], $objget(inherit.@class_vars, d[j]))
				j += 1
			}
			
			d = $objfields(inherit.@instance_vars)
			j = 0
			while j < $asize(d) {
				$objset(_.@instance_vars, d[j], $objget(inherit.@instance_vars, d[j]))
				j += 1
			}
		}
		
		return _
	}
	
	@class.@@add_class_method = function(sel) {
		$objset(this.@class_attrs, $hash(sel.@toString()), null)
	}
	
	@class.@@add_instance_method = function(sel) {
		$objset(this.@instance_attrs, $hash(sel.@toString()), null)
	}
	
	@class.@@add_var = function(name, attrs, defval) {
		if $istrue(attrs) {
			if attrs.class {
				defval = if(defval == null) null else defval()
				$objset(this.@class_vars, $hash(name), defval)
				
				if attrs.read {
					$objset(this.@class_attrs, $hash(name), function() {
						return $objget(this.@class_vars, $hash(name))
					})
				}
				
				if attrs.write {
					$objset(this.@@class_attrs, $hash(name+"@"), function(value) {
						$objset(this.@class_vars, $hash(name), value)
					})
				}
			} else {
				$objset(this.@instance_vars, $hash(name), defval)
				
				if attrs.read {
					$objset(this.@instance_attrs, $hash(name), function() {
						return $objget(this.@instance_vars, $hash(name))
					})
				}
				
				if attrs.write {
					$objset(this.@instance_attrs, $hash(name+"@"), function(value) {
						$objset(this.@instance_vars, $hash(name), value)
					})
				}
			}
		} else {
			$objset(this.@instance_vars, $hash(name), defval)
		}
	}
	
	@class.@@implementation = function() {
		if this.@super == null
			return;
		
		var d = $objfields(this.@super.@class_attrs)
		var j = 0
		while j < $asize(d) {
			$objset(this.@class_attrs, d[j], $objget(this.@super.@class_attrs, d[j]))
			j += 1
		}
		
		d = $objfields(this.@super.@instance_attrs)
		j = 0
		while j < $asize(d) {
			$objset(this.@instance_attrs, d[j], $objget(this.@super.@instance_attrs, d[j]))
			j += 1
		}
	}
	
	@class.@@class_method = function(args, body) {
		$objset(this.@class_attrs, $hash(args.@toString()), body)
	}
	
	@class.@@instance_method = function(args, body) {
		$objset(this.@instance_attrs, $hash(args.@toString()), body)
	}
	
	@class.@@get_vars = function() {
		return if this.@inst {
			this.@instance_vars
		} else {
			this.@class_vars
		}
	}
	
	@class.@@send = function(sel, args) {
		var selField = $hash(sel.@toString())
		return if this.@inst {
			if $objfield(this.@instance_attrs, selField) {
				$call($objget(this.@instance_attrs, selField), this, args)
			} else {
				// TODO: implement `- forwardInvocation:`
				// $call(this.@instance_attrs.doesNotRecognizeSelector@, this, $array(sel, args))
				$call(this.@instance_attrs.doesNotRecognizeSelector@, this, $array(sel))
			}
		} else {
			if $objfield(this.@class_attrs, selField) {
				$call($objget(this.@class_attrs, selField), this, args)
			} else {
				$call(this.@class_attrs.doesNotRecognizeSelector@, this, $array(sel))
			}
		}
	}
	
	// metamethods
	@class.__add = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__add@"))
				this.@@send(@SEL(1, $array("__add")), $array(rhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__add@"))
				this.@@send(@SEL(1, $array("__add")), $array(rhs))
			else
				$throw("error")
		}
	}
	@class.__radd = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__radd@"))
				this.@@send(@SEL(1, $array("__radd")), $array(lhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__radd@"))
				this.@@send(@SEL(1, $array("__radd")), $array(lhs))
			else
				$throw("error")
		}
	}
	
	@class.__sub = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__sub@"))
				this.@@send(@SEL(1, $array("__sub")), $array(rhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__sub@"))
				this.@@send(@SEL(1, $array("__sub")), $array(rhs))
			else
				$throw("error")
		}
	}
	@class.__rsub = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rsub@"))
				this.@@send(@SEL(1, $array("__rsub")), $array(lhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rsub@"))
				this.@@send(@SEL(1, $array("__rsub")), $array(lhs))
			else
				$throw("error")
		}
	}
	
	@class.__mult = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__mult@"))
				this.@@send(@SEL(1, $array("__mult")), $array(rhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__mult@"))
				this.@@send(@SEL(1, $array("__mult")), $array(rhs))
			else
				$throw("error")
		}
	}
	@class.__rmult = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rmult@"))
				this.@@send(@SEL(1, $array("__rmult")), $array(lhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rmult@"))
				this.@@send(@SEL(1, $array("__rmult")), $array(lhs))
			else
				$throw("error")
		}
	}
	
	@class.__div = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__div@"))
				this.@@send(@SEL(1, $array("__div")), $array(rhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__div@"))
				this.@@send(@SEL(1, $array("__div")), $array(rhs))
			else
				$throw("error")
		}
	}
	@class.__rdiv = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rdiv@"))
				this.@@send(@SEL(1, $array("__rdiv")), $array(lhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rdiv@"))
				this.@@send(@SEL(1, $array("__rdiv")), $array(lhs))
			else
				$throw("error")
		}
	}
	
	@class.__mod = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__mod@"))
				this.@@send(@SEL(1, $array("__mod")), $array(rhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__mod@"))
				this.@@send(@SEL(1, $array("__mod")), $array(rhs))
			else
				$throw("error")
		}
	}
	@class.__rmod = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rmod@"))
				this.@@send(@SEL(1, $array("__rmod")), $array(lhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rmod@"))
				this.@@send(@SEL(1, $array("__rmod")), $array(lhs))
			else
				$throw("error")
		}
	}
	
	@class.__pow = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__pow@"))
				this.@@send(@SEL(1, $array("__pow")), $array(rhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__pow@"))
				this.@@send(@SEL(1, $array("__pow")), $array(rhs))
			else
				$throw("error")
		}
	}
	@class.__rpow = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rpow@"))
				this.@@send(@SEL(1, $array("__rpow")), $array(lhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rpow@"))
				this.@@send(@SEL(1, $array("__rpow")), $array(lhs))
			else
				$throw("error")
		}
	}
	
	@class.__bitand = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__bitand@"))
				this.@@send(@SEL(1, $array("__bitand")), $array(rhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__bitand@"))
				this.@@send(@SEL(1, $array("__bitand")), $array(rhs))
			else
				$throw("error")
		}
	}
	@class.__rbitand = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rbitand@"))
				this.@@send(@SEL(1, $array("__rbitand")), $array(lhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rbitand@"))
				this.@@send(@SEL(1, $array("__rbitand")), $array(lhs))
			else
				$throw("error")
		}
	}
	
	@class.__bitor = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__bitor@"))
				this.@@send(@SEL(1, $array("__bitor")), $array(rhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__bitor@"))
				this.@@send(@SEL(1, $array("__bitor")), $array(rhs))
			else
				$throw("error")
		}
	}
	@class.__rbitor = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rbitor@"))
				this.@@send(@SEL(1, $array("__rbitor")), $array(lhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rbitor@"))
				this.@@send(@SEL(1, $array("__rbitor")), $array(lhs))
			else
				$throw("error")
		}
	}
	
	@class.__bitxor = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__bitxor@"))
				this.@@send(@SEL(1, $array("__bitxor")), $array(rhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__bitxor@"))
				this.@@send(@SEL(1, $array("__bitxor")), $array(rhs))
			else
				$throw("error")
		}
	}
	@class.__rbitxor = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rbitaxor@"))
				this.@@send(@SEL(1, $array("__rbitxor")), $array(lhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rbitxor@"))
				this.@@send(@SEL(1, $array("__rbitxor")), $array(lhs))
			else
				$throw("error")
		}
	}
	
	@class.__shl = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__shl@"))
				this.@@send(@SEL(1, $array("__shl")), $array(rhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__shl@"))
				this.@@send(@SEL(1, $array("__shl")), $array(rhs))
			else
				$throw("error")
		}
	}
	@class.__rshl = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rshl@"))
				this.@@send(@SEL(1, $array("__rshl")), $array(lhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rshl@"))
				this.@@send(@SEL(1, $array("__rshl")), $array(lhs))
			else
				$throw("error")
		}
	}
	
	@class.__shr = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__shr@"))
				this.@@send(@SEL(1, $array("__shr")), $array(rhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__shr@"))
				this.@@send(@SEL(1, $array("__shr")), $array(rhs))
			else
				$throw("error")
		}
	}
	@class.__rshr = function(lhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__rshr@"))
				this.@@send(@SEL(1, $array("__rshr")), $array(lhs))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__rshr@"))
				this.@@send(@SEL(1, $array("__rshr")), $array(lhs))
			else
				$throw("error")
		}
	}
	
	/* TODO: figure out why this breaks
	@class.__compare = function(rhs) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__compare@"))
				this.@@send(@SEL(1, $array("__compare")), $array(rhs))
			else
				return $pcompare(this, rhs)
		} else {
			if $objfield(this.@class_attrs, $hash("__compare@"))
				this.@@send(@SEL(1, $array("__compare")), $array(rhs))
			else
				return $pcompare(this, rhs)
		}
	}*/
	
	@class.__bool = function() {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__bool"))
				this.@@send(@SEL(0, $array("__bool")), $array())
			else
				true
		} else {
			if $objfield(this.@class_attrs, $hash("__bool"))
				this.@@send(@SEL(0, $array("__bool")), $array())
			else
				true
		}
	}
	
	@class.__not = function() {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__not"))
				this.@@send(@SEL(0, $array("__not")), $array())
			else
				$not(this.__bool())
		} else {
			if $objfield(this.@class_attrs, $hash("__not"))
				this.@@send(@SEL(0, $array("__not")), $array())
			else
				$not(this.__bool())
		}
	}
	
	@class.__bitnot = function() {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__bitnot"))
				this.@@send(@SEL(0, $array("__bitnot")), $array())
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__bitnot"))
				this.@@send(@SEL(0, $array("__bitnot")), $array())
			else
				$throw("error")
		}
	}
	
	@class.__pos = function() {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__pos"))
				this.@@send(@SEL(0, $array("__pos")), $array())
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__pos"))
				this.@@send(@SEL(0, $array("__pos")), $array())
			else
				$throw("error")
		}
	}
	@class.__neg = function() {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__neg"))
				this.@@send(@SEL(0, $array("__neg")), $array())
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__neg"))
				this.@@send(@SEL(0, $array("__neg")), $array())
			else
				$throw("error")
		}
	}
	
	@class.__get = function(index) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__get@"))
				this.@@send(@SEL(1, $array("__get")), $array(index))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__get@"))
				this.@@send(@SEL(1, $array("__get")), $array(index))
			else
				$throw("error")
		}
	}
	@class.__set = function(index, value) {
		if this.@inst {
			if $objfield(this.@instance_attrs, $hash("__get@__set@"))
				this.@@send(@SEL(2, $array("__get", "__set")), $array(index, value))
			else
				$throw("error")
		} else {
			if $objfield(this.@class_attrs, $hash("__get@__set@"))
				this.@@send(@SEL(2, $array("__get", "__set")), $array(index, value))
			else
				$throw("error")
		}
	}
	
	@class.__string = function() {
		// TODO: optimize the other methods to work like this
		var vars = if(this.@inst) this.@instance_vars else this.@class_vars
		var attrs = if(this.@inst) this.@instance_attrs else this.@class_attrs
		
		if $objfield(attrs, $hash("__string"))
			this.@@send(@SEL(0, $array("__string")), $array())
		else
			this.@name+vars
	}